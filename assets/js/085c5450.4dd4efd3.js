(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{323:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return O}));var r=t(0),o=t.n(r);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),i=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=i(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},p=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,b=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),s=i(t),p=r,O=s["".concat(b,".").concat(p)]||s[p]||d[p]||l;return t?o.a.createElement(O,c(c({ref:n},u),{},{components:t})):o.a.createElement(O,c({ref:n},u))}));function O(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,b=new Array(l);b[0]=p;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c.mdxType="string"==typeof e?e:r,b[1]=c;for(var u=2;u<l;u++)b[u]=t[u];return o.a.createElement.apply(null,b)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},74:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return s}));var r=t(3),o=t(7),l=(t(0),t(323)),b=["components"],c={custom_edit_url:null,title:"CoDrone Arduino Changelog",menu:"CoDrone Arduino Library Changelog",taxonomy:null,category:"changelog"},a={unversionedId:"codrone-pro/home/arduino-changelog",id:"codrone-pro/home/arduino-changelog",isDocsHomePage:!1,title:"CoDrone Arduino Changelog",description:"Aug 14, 2018",source:"@site/docs/codrone-pro/home/01-arduino-changelog.md",sourceDirName:"codrone-pro/home",slug:"/codrone-pro/home/arduino-changelog",permalink:"/doc-v2/docs/codrone-pro/home/arduino-changelog",editUrl:null,version:"current",sidebarPosition:1,frontMatter:{custom_edit_url:null,title:"CoDrone Arduino Changelog",menu:"CoDrone Arduino Library Changelog",taxonomy:null,category:"changelog"}},u=[],i={toc:u};function s(e){var n=e.components,t=Object(o.a)(e,b);return Object(l.b)("wrapper",Object(r.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Aug 14, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 2.0.2")),Object(l.b)("p",null,"Added function:"),Object(l.b)("p",null,"Add New function names to keyword file that can highlight function"),Object(l.b)("p",null,"Change GoToHeight -> goToHeight"),Object(l.b)("p",null,"scaleChange() : same function as AnalogScaleChange()"),Object(l.b)("p",null,"Adjusted circle for flySequence() to be smaller"),Object(l.b)("p",null,"Matched flySequence() shapes to match Python"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"jul-23-2018"},"Jul 23, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 2.0.1")),Object(l.b)("p",null,"Edited example files' filenames to match their folders"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"jul-19-2018"},"Jul 19, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 2.0.0")),Object(l.b)("p",null,"New Function and new example released!"),Object(l.b)("p",null,"Re-structure library file structure so that it's easy to find the actual function in the cpp file"),Object(l.b)("p",null,"Added calibrate() : work with drone firmware 50.18 and up"),Object(l.b)("p",null,"Added new example example code"),Object(l.b)("p",null,"Old example code moved to legacy example."),Object(l.b)("p",null,"Add Basecamp example and add URL to actual basecamp lesson. Some of lesson code are doing debug messages."),Object(l.b)("hr",null),Object(l.b)("h5",{id:"may-30-2018"},"May 30, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.5.5")),Object(l.b)("p",null,"Change lesson names of example code to match the Basecamp lessons, so easier for users to locate example code"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"may-2-2018"},"May 2, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.5.3")),Object(l.b)("p",null,"Added:"),Object(l.b)("p",null,"printAddress : function connect with NearbyDrone and print that drone's address",Object(l.b)("br",null),"\npair : address connect"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"april-27-2018"},"April 27, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.5.2")),Object(l.b)("p",null,"change syntex takeOff() -> takeoff()",Object(l.b)("br",null),"\nadd buzzer sound for connecting"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"march-27-2018"},"March 27, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.5.1")),Object(l.b)("p",null,"Solve syntex error from 1.5.0"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"march-20-2018"},"March 20, 2018"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.5.0")),Object(l.b)("p",null,"remove some of old function",Object(l.b)("br",null),"\nadded Function: -go(), move(), turn(), request----() etc.."),Object(l.b)("p",null,"we keep old functions but add new functions for younger kid and user",Object(l.b)("br",null),"\nNew library is more close to natural language"),Object(l.b)("p",null,"Request battery info in new function only request once int 3 seconds",Object(l.b)("br",null),"\nIf you request more than once in 3 seconds, It will request at first time and use that data for 3 second"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"october-26-2016"},"October 26, 2016"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.4.4")),Object(l.b)("p",null,"New Functions:"),Object(l.b)("p",null,"PrintGyro();",Object(l.b)("br",null),"\nPrints out the 3 dimensional gyroscope data to the serial monitor. Uses Send_LinkModeBroadcast to mute the drone serial connection between prints."),Object(l.b)("p",null,"PrintPressure();",Object(l.b)("br",null),"\nGoing to be used to print barometer data. Doesn't work yet."),Object(l.b)("p",null,"PrintFlow();",Object(l.b)("br",null),"\nGoing to be used to print image flow data. Also doesn't work yet..."),Object(l.b)("p",null,"delay() workaround",Object(l.b)("br",null),"\nA workaround for the delay() issue was created and reverted. There may be some residual code."),Object(l.b)("hr",null),Object(l.b)("h5",{id:"september-29-2016"},"September 29, 2016"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.4.3")),Object(l.b)("p",null,"Additional Battle Functions",Object(l.b)("br",null),"\nCrashedCustom(boolean custom);",Object(l.b)("br",null),"\nSet to true to enable custom \u2018out of hp/crash\u2019 flag",Object(l.b)("br",null),"\nIf set to true, there will be no death animation for the CoDrone when out of HP",Object(l.b)("br",null),"\nInstead, the check CrashedCheck() return at 1 when the CoDrone is out of HP",Object(l.b)("br",null),"\nUse this to create your own battle death maneuver \u201cif (CrashedCheck()){ Custom maneuver}",Object(l.b)("br",null)),Object(l.b)("p",null,"boolean CrashedCheck();",Object(l.b)("br",null),"\nReturns True if the CoDrone is out of HP",Object(l.b)("br",null),"\nReturns False if the CoDrone still has HP",Object(l.b)("br",null),"\nMust set CrashedCustom(true) before using CrashedCheck();",Object(l.b)("br",null)),Object(l.b)("p",null,"BattleHitPoints(int points);",Object(l.b)("br",null),"\nSets max hit points to \u201cpoints\u201d",Object(l.b)("br",null),"\nrange from 1-8",Object(l.b)("br",null),"\ndefault is 8 hit points"),Object(l.b)("p",null,"Updated some timing functions to address the CoDrone disconnecting issue",Object(l.b)("br",null),"\nAdded CheckTime1(), CheckTime2(), and CheckTime3()",Object(l.b)("br",null),"\nCheckTime1() is now a dedicated time check function for battle functions",Object(l.b)("br",null),"\nCheckTime2() is now a dedicated time check function for LED functions",Object(l.b)("br",null),"\nCheckTime() is now a dedicated time check function for Control functions",Object(l.b)("br",null),"\nCheckTime3() is not yet used"),Object(l.b)("p",null,"Changed SEND_CHECK_TIME to 10 (was 3)",Object(l.b)("br",null),"\nSet BATTLE_CHECK_TIME to 100",Object(l.b)("br",null),"\nSet LED_CHECK_TIME to 60"),Object(l.b)("p",null,"Updated Trim range descriptions",Object(l.b)("br",null),"\nThe range for valid trim values is now properly represented as -500 to 500 (used to say -100 to 100)."),Object(l.b)("p",null,"Updated Examples",Object(l.b)("br",null),"\nExamples have been updated to match new functions"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"july-19-2016"},"july 19, 2016"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.4.2")),Object(l.b)("p",null,"Improved battle health bar",Object(l.b)("br",null),"\nFixed EEPROM library conflicts"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"july-12-2016"},"July 12, 2016"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.4.1")),Object(l.b)("p",null,"Fixed EEPROM library conflicts with EEPROM from SmartInventor library."),Object(l.b)("hr",null),Object(l.b)("h5",{id:"july-8-2016"},"July 8, 2016"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.4")),Object(l.b)("p",null,"Control() now defaults to Control(SEND_INTERVAL)",Object(l.b)("br",null),"\nSend_Control() will immediately send control values",Object(l.b)("br",null),"\nBattle health bar improved"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"june-8-2016"},"June 8, 2016"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.3")),Object(l.b)("p",null,"Fixed some minor bugs that were in v1.2"),Object(l.b)("hr",null),Object(l.b)("h5",{id:"may-16-2016"},"May 16, 2016"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"CoDrone Version 1.1")),Object(l.b)("p",null,"The first CoDrone library release for Arduino Library Manager."),Object(l.b)("hr",null))}s.isMDXComponent=!0}}]);