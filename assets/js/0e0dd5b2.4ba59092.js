(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{497:function(e,n,r){"use strict";r.d(n,"a",(function(){return s})),r.d(n,"b",(function(){return m}));var t=r(0),o=r.n(t);function l(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){l(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),d=function(e){var n=o.a.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},s=function(e){var n=d(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,l=e.originalType,a=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=d(r),b=t,m=s["".concat(a,".").concat(b)]||s[b]||u[b]||l;return r?o.a.createElement(m,c(c({ref:n},p),{},{components:r})):o.a.createElement(m,c({ref:n},p))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var l=r.length,a=new Array(l);a[0]=b;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:t,a[1]=c;for(var p=2;p<l;p++)a[p]=r[p];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},92:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return c})),r.d(n,"metadata",(function(){return i})),r.d(n,"toc",(function(){return p})),r.d(n,"default",(function(){return s}));var t=r(3),o=r(7),l=(r(0),r(497)),a=["components"],c={custom_edit_url:null,id:"06-controller_draw_ellipse",title:"controller_draw_ellipse()"},i={unversionedId:"codrone-edu/python/Screen/06-controller_draw_ellipse",id:"codrone-edu/python/Screen/06-controller_draw_ellipse",isDocsHomePage:!1,title:"controller_draw_ellipse()",description:"Description",source:"@site/docs/codrone-edu/python/09-Screen/06-controller_draw_ellipse.md",sourceDirName:"codrone-edu/python/09-Screen",slug:"/codrone-edu/python/Screen/06-controller_draw_ellipse",permalink:"/docs/codrone-edu/python/Screen/06-controller_draw_ellipse",editUrl:null,version:"current",sidebarPosition:6,frontMatter:{custom_edit_url:null,id:"06-controller_draw_ellipse",title:"controller_draw_ellipse()"}},p=[],d={toc:p};function s(e){var n=e.components,r=Object(o.a)(e,a);return Object(l.b)("wrapper",Object(t.a)({},d,r,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h5",{id:"description"},"Description"),Object(l.b)("p",null,"Draws an ellipse inside the given bounding box."),Object(l.b)("h5",{id:"syntax"},"Syntax"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"controller_draw_ellipse(ellipse_list, image, fill_in, pixel_width)")," ",Object(l.b)("br",null)),Object(l.b)("h5",{id:"parameters"},"Parameters"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"ellipse_list"),": Two points to define the bounding box. Sequence of ","[(x0, y0), (x1, y1)]"," where x1 >= x0 and y1 >= y0.\n",Object(l.b)("strong",{parentName:"p"},"image"),": image object created from create_image_canvas()\n",Object(l.b)("strong",{parentName:"p"},"fill_in"),": optional parameter. None by default. 0 will fill with black\n",Object(l.b)("strong",{parentName:"p"},"pixel_width"),": optional parameter that is the line width, in pixels. default value is 1"),Object(l.b)("h5",{id:"returns"},"Returns"),Object(l.b)("p",null,"None"),Object(l.b)("h5",{id:"example-code"},"Example Code"),Object(l.b)("h6",{id:"python"},"Python"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"#Python code\nfrom codrone_edu.drone import *\n\ndrone = Drone()\ndrone.pair()\n\ndrone.controller_clear_screen() # clear screen for drawing\nimage = drone.controller_create_canvas()  # create image object\n\nellipse_list = [(10, 10), (40, 40)]\ndrone.controller_draw_ellipse(ellipse_list, image) # set ellipse onto image object\n\ndrone.controller_draw_canvas(image)  # draw image onto controller screen\n\ndrone.close()\n\n")))}s.isMDXComponent=!0}}]);