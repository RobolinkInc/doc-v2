(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{167:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return p})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return m}));var n=r(3),o=r(7),i=(r(0),r(377)),a=["components"],c={custom_edit_url:null,id:"set-trim",title:"set_trim()"},p={unversionedId:"codrone-edu/python/Flight-Commands-Start-Stop/set-trim",id:"codrone-edu/python/Flight-Commands-Start-Stop/set-trim",isDocsHomePage:!1,title:"set_trim()",description:"Description",source:"@site/docs/codrone-edu/python/02-Flight-Commands-Start-Stop/07-set-trim.md",sourceDirName:"codrone-edu/python/02-Flight-Commands-Start-Stop",slug:"/codrone-edu/python/Flight-Commands-Start-Stop/set-trim",permalink:"/doc-v2/docs/codrone-edu/python/Flight-Commands-Start-Stop/set-trim",editUrl:null,version:"current",sidebarPosition:7,frontMatter:{custom_edit_url:null,id:"set-trim",title:"set_trim()"},sidebar:"codroneEduSideBar",previous:{title:"reset_trim()",permalink:"/doc-v2/docs/codrone-edu/python/Flight-Commands-Start-Stop/reset-trim"},next:{title:"takeoff()",permalink:"/doc-v2/docs/codrone-edu/python/Flight-Commands-Start-Stop/take-off"}},l=[],s={toc:l};function m(e){var t=e.components,r=Object(o.a)(e,a);return Object(i.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h5",{id:"description"},"Description"),Object(i.b)("p",null,"You can set the ",Object(i.b)("strong",{parentName:"p"},"roll")," and ",Object(i.b)("strong",{parentName:"p"},"pitch")," trim of the drone in case your drone is drifting. For example, if the drone is drifting to its right, you may want to set the roll to a small negative value. This trim will remain saved, even after powering off until you've changed the trim either programmatically, or done a reset with the remote. ",Object(i.b)("strong",{parentName:"p"},"NOTE:")," If you're setting the trim right before a takeoff, make sure to add a ",Object(i.b)("inlineCode",{parentName:"p"},"time.sleep(1)")," before the ",Object(i.b)("inlineCode",{parentName:"p"},"takeoff()"),", otherwise the takeoff commmand might be skipped."),Object(i.b)("h5",{id:"syntax"},"Syntax"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"set_trim(roll, pitch)")),Object(i.b)("h5",{id:"parameters"},"Parameters"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"roll"),": the power of the roll, which is an int from -100 to 100",Object(i.b)("br",null),"\n",Object(i.b)("strong",{parentName:"p"},"pitch"),": the power of the pitch, which is an int from -100 to 100",Object(i.b)("br",null)),Object(i.b)("h5",{id:"returns"},"Returns"),Object(i.b)("p",null,"None"),Object(i.b)("h5",{id:"example-code"},"Example Code"),Object(i.b)("h6",{id:"python"},"Python"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"#Python code\nimport CoDrone_mini\nimport time\n\ndrone = CoDrone_mini.CoDrone()\ndrone.pair()\n\ndrone.set_trim(-1, 0) # example: drone is drifting right, so trim to roll left a little bit\n\ntime.sleep(1)       # Add a time.sleep(1) before takeoff if you're planning to set the trim before takeoff\ndrone.takeoff()\ndrone.hover(3)\ndrone.land()\ndrone.close()\n")))}m.isMDXComponent=!0},377:function(e,t,r){"use strict";r.d(t,"a",(function(){return m})),r.d(t,"b",(function(){return f}));var n=r(0),o=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},m=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=s(r),u=n,f=m["".concat(a,".").concat(u)]||m[u]||d[u]||i;return r?o.a.createElement(f,c(c({ref:t},l),{},{components:r})):o.a.createElement(f,c({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);