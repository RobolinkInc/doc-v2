(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{430:function(e,r,o){"use strict";o.d(r,"a",(function(){return i})),o.d(r,"b",(function(){return g}));var t=o(0),n=o.n(t);function c(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function l(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function a(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?l(Object(o),!0).forEach((function(r){c(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function s(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},c=Object.keys(e);for(t=0;t<c.length;t++)o=c[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)o=c[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var b=n.a.createContext({}),d=function(e){var r=n.a.useContext(b),o=r;return e&&(o="function"==typeof e?e(r):a(a({},r),e)),o},i=function(e){var r=d(e.components);return n.a.createElement(b.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.a.createElement(n.a.Fragment,{},r)}},f=n.a.forwardRef((function(e,r){var o=e.components,t=e.mdxType,c=e.originalType,l=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),i=d(o),f=t,g=i["".concat(l,".").concat(f)]||i[f]||u[f]||c;return o?n.a.createElement(g,a(a({ref:r},b),{},{components:o})):n.a.createElement(g,a({ref:r},b))}));function g(e,r){var o=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var c=o.length,l=new Array(c);l[0]=f;var a={};for(var s in r)hasOwnProperty.call(r,s)&&(a[s]=r[s]);a.originalType=e,a.mdxType="string"==typeof e?e:t,l[1]=a;for(var b=2;b<c;b++)l[b]=o[b];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,o)}f.displayName="MDXCreateElement"},77:function(e,r,o){"use strict";o.r(r),o.d(r,"frontMatter",(function(){return a})),o.d(r,"metadata",(function(){return s})),o.d(r,"toc",(function(){return b})),o.d(r,"default",(function(){return i}));var t=o(3),n=o(7),c=(o(0),o(430)),l=["components"],a={custom_edit_url:null,title:"CoDrone EDU Library Reference",menu:"Codrone EDU",id:"library-senior",sidebar_label:"Junior reference",hide_table_of_contents:!0},s={unversionedId:"codrone-edu/blockly/reference/library-senior",id:"codrone-edu/blockly/reference/library-senior",isDocsHomePage:!1,title:"CoDrone EDU Library Reference",description:"version 1.1.3 (Changelog)",source:"@site/docs/codrone-edu/blockly/reference/reference_senior.md",sourceDirName:"codrone-edu/blockly/reference",slug:"/codrone-edu/blockly/reference/library-senior",permalink:"/docs/codrone-edu/blockly/reference/library-senior",editUrl:null,version:"current",sidebar_label:"Junior reference",frontMatter:{custom_edit_url:null,title:"CoDrone EDU Library Reference",menu:"Codrone EDU",id:"library-senior",sidebar_label:"Junior reference",hide_table_of_contents:!0}},b=[],d={toc:b};function i(e){var r=e.components,o=Object(n.a)(e,l);return Object(c.b)("wrapper",Object(t.a)({},d,o,{components:r,mdxType:"MDXLayout"}),Object(c.b)("h3",{class:"homeDocLandingVersion"},"version 1.1.3 (",Object(c.b)("a",{class:"orange-link",href:"/docs/codrone-edu/blockly/changelog"},"Changelog"),")"),"These are the Blockly functions that you can use to control the CoDrone EDU. Example code is provided in each function definition.",Object(c.b)("div",{class:"boxLanding"},Object(c.b)("div",{class:"parentContainer"}),Object(c.b)("div",{class:"parentContainer"},Object(c.b)("div",{class:"box-reference-shadow"},Object(c.b)("h3",null,"Flight Commands"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/01-takeoff"},"take off"),Object(c.b)("img",{src:"/img/takeoff.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/02-land"},"land "),Object(c.b)("img",{src:"/img/land.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/03-emergency-stop"},"emergency stop"),Object(c.b)("img",{src:"/img/emergency_stop.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/04-hover"},"hover"),Object(c.b)("img",{src:"/img/hover.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/05-flip"},"flip"),Object(c.b)("img",{src:"/img/go_for_seconds_at_power.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/06-turn-degree"},"turn degree"),Object(c.b)("img",{src:"/img/turn_for_seconds_at_power.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/07-avoid-wall"},"avoid wall"),Object(c.b)("img",{src:"/img/hover.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/08-go"},"go"),Object(c.b)("img",{src:"/img/hover.png"}),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Commands/09-turn-to"}," turn to"),Object(c.b)("img",{src:"/img/hover.png"}))),Object(c.b)("div",{class:"parentContainer"},Object(c.b)("div",{class:"box-reference-shadow"},Object(c.b)("h3",null,"Flight Variables"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Variables/01-set-roll"},"set roll"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Variables/02-set-pitch"},"set pitch"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Variables/03-set-yaw"},"set yaw"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Variables/04-set-throttle"},"set throttle"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Variables/05-move"},"move"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Variables/06-set-trim"},"set trim"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Flight-Variables/07-get-trim"},"set roll"))),Object(c.b)("div",{class:"parentContainer"},Object(c.b)("div",{class:"box-reference-shadow"},Object(c.b)("h3",null,"Status Checkers"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Status-Checkers/01-code-is-running"},"code is running"))),Object(c.b)("div",{class:"parentContainer"},Object(c.b)("div",{class:"box-reference-shadow"},Object(c.b)("h3",null,"Lights"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Lights/01-set-drone-led"},"set drone led"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Lights/02-drone-led-off"},"drone led off"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Lights/03-set-controller-led"},"set controller led"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Lights/04-controller-led-off"},"controller led off"))),Object(c.b)("div",{class:"parentContainer"},Object(c.b)("div",{class:"box-reference-shadow"},Object(c.b)("h3",null,"Sensors"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/01-get-range"},"get range"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/02-get-angle"},"get angle"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/03-get-gyro"},"get gyro"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/04-get-accel"},"get accel"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/05-get-pos"},"get pos"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/06-get-battery"},"get battery"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/07-get-height"},"get height"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/08-get-pressure"},"get pressure"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/09-get-temperature"},"get temperature"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/10-get-altitude"},"get altitude"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/11-get-color"},"get color"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/12-get-hsvl"},"get hsvl"),Object(c.b)("a",{href:"/docs/codrone-edu/blockly/Sensors/13-get-state-data"},"get state data"))),Object(c.b)("div",{class:"parentContainer"})))}i.isMDXComponent=!0}}]);