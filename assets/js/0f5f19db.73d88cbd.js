(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{377:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),s=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},f=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return t?r.a.createElement(m,i(i({ref:n},p),{},{components:t})):r.a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=t[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},83:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return d}));var o=t(3),r=t(7),a=(t(0),t(377)),c=["components"],i={custom_edit_url:null,title:"takeoff()",menu:"takeoff()",taxonomy:null,category:"flight-command-startstop"},l={unversionedId:"codrone-pro/python/flight-commands-start-stop/take-off",id:"codrone-pro/python/flight-commands-start-stop/take-off",isDocsHomePage:!1,title:"takeoff()",description:"Description",source:"@site/docs/codrone-pro/python/04-flight-commands-start-stop/03-take-off.md",sourceDirName:"codrone-pro/python/04-flight-commands-start-stop",slug:"/codrone-pro/python/flight-commands-start-stop/take-off",permalink:"/doc-v2/docs/codrone-pro/python/flight-commands-start-stop/take-off",editUrl:null,version:"current",sidebarPosition:3,frontMatter:{custom_edit_url:null,title:"takeoff()",menu:"takeoff()",taxonomy:null,category:"flight-command-startstop"},sidebar:"codroneProSideBar",previous:{title:"land()",permalink:"/doc-v2/docs/codrone-pro/python/flight-commands-start-stop/land"},next:{title:"fly_sequence()",permalink:"/doc-v2/docs/codrone-pro/python/flight-commands-movement/fly-sequence"}},p=[],s={toc:p};function d(e){var n=e.components,t=Object(r.a)(e,c);return Object(a.b)("wrapper",Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h5",{id:"description"},"Description"),Object(a.b)("p",null,"This function makes the drone take off and begin hovering.",Object(a.b)("br",null),"\nThe drone will always hover for 3 seconds in order to stabilize before it executes the next command.",Object(a.b)("br",null),"\nIf it receives no command for 8 seconds, it will automatically land."),Object(a.b)("h5",{id:"syntax"},"Syntax"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"takeoff()")),Object(a.b)("h5",{id:"parameters"},"Parameters"),Object(a.b)("p",null,"None"),Object(a.b)("h5",{id:"returns"},"Returns"),Object(a.b)("p",null,"None"),Object(a.b)("h5",{id:"example-code"},"Example Code"),Object(a.b)("h6",{id:"python"},"Python"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"#Python code\nimport CoDrone\n\ndrone = CoDrone.CoDrone()\ndrone.pair()\ndrone.takeoff()\n\ndrone.hover(3)\ndrone.land()\ndrone.close()\n")),Object(a.b)("h6",{id:"arduino"},"Arduino"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c"},"//Arduino code\n#include<CoDrone.h>     //header\n\nvoid setup(){\n    //below this have to code in setup\n    //open serial and connect\n    CoDrone.begin(115200);\n    CoDrone.pair(Nearest);\n\n    CoDrone.takeoff();      // take off and hover for 3 second\n    CoDrone.hover(3);       // hover for 3 second\n    CoDrone.land();     //landing   \n}\n\nvoid loop(){\n\n}\n")))}d.isMDXComponent=!0}}]);