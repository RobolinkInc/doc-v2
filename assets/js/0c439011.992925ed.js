(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{380:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),p=function(e){var n=i.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=p(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},s=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),b=p(t),s=r,m=b["".concat(a,".").concat(s)]||b[s]||d[s]||o;return t?i.a.createElement(m,c(c({ref:n},u),{},{components:t})):i.a.createElement(m,c({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var u=2;u<o;u++)a[u]=t[u];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},81:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return b}));var r=t(3),i=t(7),o=(t(0),t(380)),a=["components"],c={custom_edit_url:null,title:"draw_line()",published:!0,taxonomy:{category:["screen"],tag:["zumi-library"]},menu:"draw_line()"},l={unversionedId:"zumi/Screen/draw-line",id:"zumi/Screen/draw-line",isDocsHomePage:!1,title:"draw_line()",description:"Description",source:"@site/docs/zumi/06-Screen/12-draw-line.md",sourceDirName:"zumi/06-Screen",slug:"/zumi/Screen/draw-line",permalink:"/doc-v2/docs/zumi/Screen/draw-line",editUrl:null,version:"current",sidebarPosition:12,frontMatter:{custom_edit_url:null,title:"draw_line()",published:!0,taxonomy:{category:["screen"],tag:["zumi-library"]},menu:"draw_line()"},sidebar:"someSidebar",previous:{title:"draw_image()",permalink:"/doc-v2/docs/zumi/Screen/draw-image"},next:{title:"draw_point()",permalink:"/doc-v2/docs/zumi/Screen/draw-point"}},u=[],p={toc:u};function b(e){var n=e.components,t=Object(i.a)(e,a);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h5",{id:"description"},"Description"),Object(o.b)("p",null,"Draws a line between points (x1,y1) and (x2,y2)."),Object(o.b)("h5",{id:"syntax"},"Syntax"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"draw_line(x1, y1, x2, y2)"),Object(o.b)("br",null),"\n",Object(o.b)("inlineCode",{parentName:"p"},"draw_line(x1, y1, x2, y2, thickness=1,fill_in=True)"),Object(o.b)("br",null)),Object(o.b)("h5",{id:"parameters"},"Parameters"),Object(o.b)("p",null,"x1: x coordinate of the starting point",Object(o.b)("br",null),"\ny1: y coordinate of the starting point",Object(o.b)("br",null),"\nx2: x coordinate of the ending point",Object(o.b)("br",null),"\ny2: y coordinate of the ending point",Object(o.b)("br",null),"\nthickness: pixel width of the line",Object(o.b)("br",null),"\nfill_in: Boolean that selects if the line will be filled in (white). Default to True.",Object(o.b)("br",null)),Object(o.b)("h5",{id:"returns"},"Returns"),Object(o.b)("p",null,"None"),Object(o.b)("h5",{id:"example-code"},"Example Code"),Object(o.b)("h6",{id:"python"},"Python"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"#Python code\nfrom zumi.util.screen import Screen\nimport time\n\nscreen=Screen()\nscreen.draw_line(0,0,40,40,fill_in=True)\nscreen.draw_line(40,0,0,40,thickness=10,fill_in=True)\n")))}b.isMDXComponent=!0}}]);